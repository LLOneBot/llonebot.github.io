import{_ as a,c as s,o as e,a2 as t}from"./chunks/framework.Bx6qu0xe.js";const g=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/guide/getting-started.md","filePath":"zh-CN/guide/getting-started.md","lastUpdated":1709910835000}'),i={name:"zh-CN/guide/getting-started.md"},n=t(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="通用安装方法" tabindex="-1">通用安装方法 <a class="header-anchor" href="#通用安装方法" aria-label="Permalink to &quot;通用安装方法&quot;">​</a></h2><p>1.安装 <a href="https://liteloaderqqnt.github.io/guide/install.html" target="_blank" rel="noreferrer">LiteLoaderQQNT</a></p><p>2.安装本项目插件 <a href="https://github.com/linyuchen/LiteLoaderQQNT-OneBotApi/releases/" target="_blank" rel="noreferrer">OneBotApi</a> 最新版本.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>注意本插件2.0以下的版本不支持LiteLoader 1.0.0及以上版本</p></div><p><em>关于插件的安装方法: 下载后解压复制到插件目录</em></p><details class="details custom-block"><summary>目录结构</summary><p><em>插件目录:LiteLoaderQQNT/plugins</em></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>├── plugins</span></span>
<span class="line"><span>│   ├── LLOneBot</span></span>
<span class="line"><span>│   │   └── main.js</span></span>
<span class="line"><span>│   │   └── preload.js</span></span>
<span class="line"><span>│   │   └── renderer.js</span></span>
<span class="line"><span>│   │   └── manifest.json</span></span>
<span class="line"><span>│   │   └── node_modules/...</span></span></code></pre></div></details><h2 id="linux-容器化快速安装" tabindex="-1">Linux 容器化快速安装 <a class="header-anchor" href="#linux-容器化快速安装" aria-label="Permalink to &quot;Linux 容器化快速安装&quot;">​</a></h2><p>具体问题参考: <a href="https://github.com/MliKiowa/llonebot-docker" target="_blank" rel="noreferrer">LLOneBot-Docker</a></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-QNXHH" id="tab-JBG89Wn" checked="checked"><label for="tab-JBG89Wn">Curl</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://cdn.jsdelivr.net/gh/MliKiowa/llonebot-docker/fastboot.sh)</span></span></code></pre></div></div></div><h2 id="使用termux安装" tabindex="-1">使用termux安装 <a class="header-anchor" href="#使用termux安装" aria-label="Permalink to &quot;使用termux安装&quot;">​</a></h2><p>具体问题参考: <a href="https://github.com/LLOneBot/llonebot-termux" target="_blank" rel="noreferrer">LLOneBot-Termux</a></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-FD5W3" id="tab--NQlnVP" checked="checked"><label for="tab--NQlnVP">Curl</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/LLOneBot/llonebot-termux/raw/main/onekey.sh)&quot;</span></span></code></pre></div></div></div>`,13),l=[n];function p(r,o,h,d,c,u){return e(),s("div",null,l)}const b=a(i,[["render",p]]);export{g as __pageData,b as default};
