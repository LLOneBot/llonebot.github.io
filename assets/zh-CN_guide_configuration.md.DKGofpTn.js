import{_ as e,c as t,o as a,ae as s}from"./chunks/framework.ce759mQD.js";const n="/assets/koishi-install-onebot.BYwYBCfW.png",d="/assets/koishi-onebot-setting.DWIoaGTS.png",m=JSON.parse('{"title":"配置","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/guide/configuration.md","filePath":"zh-CN/guide/configuration.md","lastUpdated":1749261485000}'),i={name:"zh-CN/guide/configuration.md"};function r(c,o,l,p,h,b){return a(),t("div",null,o[0]||(o[0]=[s('<h1 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h1><h2 id="接入-koishi-的-adapter-onebot" tabindex="-1">接入 Koishi 的 adapter-onebot <a class="header-anchor" href="#接入-koishi-的-adapter-onebot" aria-label="Permalink to &quot;接入 Koishi 的 adapter-onebot&quot;">​</a></h2><h4 id="_1-在-koishi-插件市场搜索并安装-adapter-onebot" tabindex="-1">1. 在 Koishi 插件市场搜索并安装 adapter-onebot <a class="header-anchor" href="#_1-在-koishi-插件市场搜索并安装-adapter-onebot" aria-label="Permalink to &quot;1. 在 Koishi 插件市场搜索并安装 adapter-onebot&quot;">​</a></h4><p><img src="'+n+'" alt=""></p><h4 id="_2-配置-adapter-onebot" tabindex="-1">2. 配置 adapter-onebot <a class="header-anchor" href="#_2-配置-adapter-onebot" aria-label="Permalink to &quot;2. 配置 adapter-onebot&quot;">​</a></h4><p>这里以 WS 反向连接为例</p><p>填写 selfId 为你的机器人的 QQ 号</p><p>token 可以为空，需与 LLOneBot 配置的 token 一致</p><p>protocol 选择 <code>ws-reverse</code></p><p>其他配置保持默认即可，保存配置然后启用插件</p><p><img src="'+d+'" alt=""></p><h4 id="_3-配置完成后-llonebot-添加-ws-反向地址" tabindex="-1">3. 配置完成后，LLOneBot 添加 WS 反向地址 <a class="header-anchor" href="#_3-配置完成后-llonebot-添加-ws-反向地址" aria-label="Permalink to &quot;3. 配置完成后，LLOneBot 添加 WS 反向地址&quot;">​</a></h4><p>adapter-onebot 的 WS 反向地址为 <code>ws://127.0.0.1:5140/onebot</code></p><p>将 llonebot 的 <code>data/config_&lt;qq&gt;.json</code> 中的 <code>wsReverseUrls</code> 配置为 <code>[&quot;ws://127.0.0.1:5140/onebot&quot;]</code></p><p>保存即可</p><h2 id="接入-nonebot-的-adapter-onebot" tabindex="-1">接入 NoneBot 的 adapter-onebot <a class="header-anchor" href="#接入-nonebot-的-adapter-onebot" aria-label="Permalink to &quot;接入 NoneBot 的 adapter-onebot&quot;">​</a></h2><h4 id="_1-配置-nonebot" tabindex="-1">1. 配置 NoneBot <a class="header-anchor" href="#_1-配置-nonebot" aria-label="Permalink to &quot;1. 配置 NoneBot&quot;">​</a></h4><p>这里假设你已经安装了 Onebot 适配器</p><p>然后启用 NoneBot，可以看到 NoneBot 输出的端口号，如 <code>8080</code></p><h4 id="_2-配置-llonebot" tabindex="-1">2. 配置 LLOneBot <a class="header-anchor" href="#_2-配置-llonebot" aria-label="Permalink to &quot;2. 配置 LLOneBot&quot;">​</a></h4><p>在 LLOneBot 配置文件添加反向 WS 地址，地址为 <code>ws://127.0.0.1:8080/onebot/v11/ws</code>, 这里的 <code>8080</code> 是 NoneBot 输出的端口号，<code>/onebot/v11/ws</code> 是 NoneBot onebot 适配器默认的路径</p><p>具体为： <code>data/config_&lt;qq&gt;.json</code> 中的 <code>wsReverseUrls</code> 配置为 <code>[&quot;ws://127.0.0.1:5140/onebot&quot;]</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>记得 LLOneBot 配置的 token 需要和 NoneBot 配置的 一致</p></div><h2 id="http-配置" tabindex="-1">HTTP 配置 <a class="header-anchor" href="#http-配置" aria-label="Permalink to &quot;HTTP 配置&quot;">​</a></h2><details class="details custom-block"><summary>HTTP服务端口，用于接收应用端的 HTTP API 调用</summary><p>如配置的 3000 端口，那么 API 地址为 <code>http://localhost:3000</code></p><p>一个简单的发送消息 API 调用示例</p><p><img src="https://github.com/LLOneBot/LLOneBot/raw/main/doc/image/example.jpg" alt=""></p></details><details class="details custom-block"><summary>HTTP 上报地址</summary><p>当 LLOneBot 收到消息等事件时，会以 <code>POST</code> 请求的方式将事件上报到此地址</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>上报地址必须是 <code>http://</code> 开头</p><p>HTTP 事件上报，不支持快捷回复等快捷操作</p></div></details><h2 id="正向-ws-配置" tabindex="-1">正向 WS 配置 <a class="header-anchor" href="#正向-ws-配置" aria-label="Permalink to &quot;正向 WS 配置&quot;">​</a></h2><details class="details custom-block"><summary>用于接受应用端的正向 WS 连接</summary><p>如正向 WS 绑定的端口为 3001</p><p>需要在应用端配置的WS地址为 <code>ws://localhost:3001</code></p></details><h2 id="反向-ws-配置" tabindex="-1">反向 WS 配置 <a class="header-anchor" href="#反向-ws-配置" aria-label="Permalink to &quot;反向 WS 配置&quot;">​</a></h2><details class="details custom-block"><summary>用于 LLOneBot 主动连接应用端绑定的反向WS地址</summary><p>如在 NoneBot2 配置了 onebot 的端口为 8080，路径为 <code>/onebot/v11/ws</code></p><p>那么在 LLOneBot 配置的反向 WS 地址为 <code>ws://localhost:8080/onebot/v11/ws</code></p></details>',30)]))}const _=e(i,[["render",r]]);export{m as __pageData,_ as default};
